/*
 * Copyright (C) 2002 Thomas Hacklaender, mailto:hacklaender@iftm.de
 *
 * IFTM Institut fuer Telematik in der Medizin GmbH, www.iftm.de
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU  General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * http://www.gnu.org/copyleft/copyleft.html
 */
package de.iftm.dcm4che.dcmie.inspect;

import java.io.*;
import java.util.*;
import javax.swing.event.*;
import javax.swing.tree.*;

import org.dcm4che.media.*;

import de.iftm.dcm4che.dcmie.*;
import de.iftm.dcm4che.dirtable.*;
import de.iftm.javax.swing.*;


/**
 * @author   Thomas Hacklaender
 * @version  2002.06.23
 */
public class DcmDirTab extends javax.swing.JPanel implements java.io.Serializable {
  
  // The last selected DICOM-Directory file
  private File    lastDICOMDIRFile = null;
  
  
  /**
   * Creates new form DirPanel
   */
  public DcmDirTab() {
    initComponents();
  }
  
  
  /**
   * Set up the Panel
   */
  public void setUp(DcmieParam dcmieParam) {
    File  dicomdir = null;
    
    if ((!dcmieParam.isImportFilesystem) & (dcmieParam.importFile != null)) {
      // Aus dem Parameterblock
      dicomdir = dcmieParam.importFile;
    } else {
      // Default File ist user.dir/DICOMDIR
      dicomdir = new File(System.getProperty("user.dir"), "DICOMDIR");
    }
    
    if (dicomdir.exists()) {
      setDICOMDIR(dicomdir);
    }
  }
  
  
  /**
   * Set a new DICOMDIR directory file.
   * @param f the DICOMDIR directory file.
   */
  public void setDICOMDIR(File f) {
    
    if (f == null) return;
    
    lastDICOMDIRFile = f;
    
    // Textfeld updaten
    dcmDirText.setText(f.toString());
    
    dirTable.setDICOMDIR(f);

    validate();
  }

  
  public DirTable getDirTable () {
    return dirTable;
  }
  
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    java.awt.GridBagConstraints gridBagConstraints;

    openBtn = new javax.swing.JButton();
    dcmDirText = new javax.swing.JTextField();
    dirTable = new de.iftm.dcm4che.dirtable.DirTable();

    setLayout(new java.awt.GridBagLayout());

    openBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/iftm/dcm4che/dcmie/imp/resources/open.gif")));
    openBtn.setMaximumSize(new java.awt.Dimension(40, 25));
    openBtn.setMinimumSize(new java.awt.Dimension(40, 25));
    openBtn.setPreferredSize(new java.awt.Dimension(40, 25));
    openBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        openBtnActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    add(openBtn, gridBagConstraints);

    dcmDirText.setEditable(false);
    dcmDirText.setPreferredSize(new java.awt.Dimension(256, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
    add(dcmDirText, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
    add(dirTable, gridBagConstraints);

  }//GEN-END:initComponents
  
  private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
    File  f = null;
    
    if (lastDICOMDIRFile == null) {
      f = FileChooser.openFile("Select a DICOM-Directory file", new File("/"));
    } else {
      f = FileChooser.openFile("Select a DICOM-Directory file", f);
    }
    
    setDICOMDIR(f);
    
  }//GEN-LAST:event_openBtnActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton openBtn;
  private javax.swing.JTextField dcmDirText;
  private de.iftm.dcm4che.dirtable.DirTable dirTable;
  // End of variables declaration//GEN-END:variables
  
}

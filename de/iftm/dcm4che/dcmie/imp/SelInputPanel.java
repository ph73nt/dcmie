/*
 * Copyright (C) 2002 Thomas Hacklaender, mailto:hacklaender@iftm.de
 *
 * IFTM Institut fuer Telematik in der Medizin GmbH, www.iftm.de
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU  General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * http://www.gnu.org/copyleft/copyleft.html
 */
package de.iftm.dcm4che.dcmie.imp;

import java.awt.*;
import java.io.*;

import de.iftm.dcm4che.dcmie.*;
import de.iftm.javax.swing.filetree.*;
import de.iftm.java.util.*;


/**
 * @author   Thomas Hacklaender
 * @version  2002.6.23
 */
public class SelInputPanel extends javax.swing.JPanel implements java.io.Serializable {
  
  // The last selected roor directory
  private File    lastRootDir = null;
  
  /**
   * Creates new form DirPanel
   */
  public SelInputPanel() {
    initComponents();
  }
  
  
  /**
   * Set up the Panel
   */
  public void setUp(DcmieParam dcmieParam) {
    fileSystemTab.setUp(dcmieParam);
    dcmDirTab.setUp(dcmieParam);
    
    if (dcmieParam.isImportFilesystem) {
      selectTabComponent(getFileSystemTab());
    } else {
      selectTabComponent(getDICOMDIRTab());
    }
  }

  
  /**
   * Returns the FileSystemPanel.
   * @return the FileSystemPanel.
   */
  public FileSystemTab getFileSystemTab() {
    return fileSystemTab;
  }
  
  
  /**
   * Returns the DcmDirPanel.
   * @return the DcmDirPanel.
   */
  public DcmDirTab getDICOMDIRTab() {
    return dcmDirTab;
  }
  
  
  /**
   * Select a tab.
   * @param comp the selected tab.
   */
  public void selectTabComponent(Component comp) {
    if (comp == fileSystemTab) {
      tabbedPane.setSelectedComponent(fileSystemTab);
    }
    
    if (comp == dcmDirTab) {
      tabbedPane.setSelectedComponent(dcmDirTab);
    }
    
    // Ungueltige Component, nichts tun
  }

  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    tabbedPane = new javax.swing.JTabbedPane();
    fileSystemTab = new de.iftm.dcm4che.dcmie.imp.FileSystemTab();
    dcmDirTab = new de.iftm.dcm4che.dcmie.imp.DcmDirTab();

    setLayout(new java.awt.BorderLayout());

    setMinimumSize(new java.awt.Dimension(256, 64));
    setPreferredSize(new java.awt.Dimension(0, 0));
    fileSystemTab.setMinimumSize(new java.awt.Dimension(256, 192));
    fileSystemTab.setPreferredSize(new java.awt.Dimension(0, 0));
    tabbedPane.addTab("Filesystem", null, fileSystemTab, "null");

    tabbedPane.addTab("DICOMDIR", dcmDirTab);

    add(tabbedPane, java.awt.BorderLayout.CENTER);

  }//GEN-END:initComponents
  

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private de.iftm.dcm4che.dcmie.imp.DcmDirTab dcmDirTab;
  private javax.swing.JTabbedPane tabbedPane;
  private de.iftm.dcm4che.dcmie.imp.FileSystemTab fileSystemTab;
  // End of variables declaration//GEN-END:variables
  
}

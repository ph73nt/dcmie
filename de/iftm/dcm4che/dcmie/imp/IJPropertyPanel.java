/*
 * Copyright (C) 2002 Thomas Hacklaender, mailto:hacklaender@iftm.de
 *
 * IFTM Institut fuer Telematik in der Medizin GmbH, www.iftm.de
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the GNU  General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 * http://www.gnu.org/copyleft/copyleft.html
 */
package de.iftm.dcm4che.dcmie.imp;


import de.iftm.dcm4che.dcmie.*;


/**
 * @author   Thomas Hacklaender
 * @version  2002.05.25
 */
public class IJPropertyPanel extends javax.swing.JPanel implements java.io.Serializable {

  /**
   * The parameter
   */
  private DcmieParam    dcmieParam = null;
  
  
  /** Creates new form IJPropertyPanel */
  public IJPropertyPanel() {
    initComponents();
  }
  
  
  /**
   * Set up the Panel
   */
  public void setUp(DcmieParam dcmieParam) {
    
    this.dcmieParam = dcmieParam;
    
    metaStringBox.setSelected(dcmieParam.isMetadataString);
    metaBinaryBox.setSelected(dcmieParam.isMetadataBinary);
    metaOnlyFirstBox.setSelected(dcmieParam.isMetadataOnlyFirst);
    imageShowBox.setSelected(dcmieParam.isImageShow);
  }

  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    java.awt.GridBagConstraints gridBagConstraints;

    metaLabel = new javax.swing.JLabel();
    metaStringBox = new javax.swing.JCheckBox();
    metaBinaryBox = new javax.swing.JCheckBox();
    metaOnlyFirstBox = new javax.swing.JCheckBox();
    imageShowBox = new javax.swing.JCheckBox();

    setLayout(new java.awt.GridBagLayout());

    setPreferredSize(new java.awt.Dimension(243, 69));
    metaLabel.setText("Metadata:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
    add(metaLabel, gridBagConstraints);

    metaStringBox.setText("String");
    metaStringBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        metaStringBoxActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(metaStringBox, gridBagConstraints);

    metaBinaryBox.setText("Binary");
    metaBinaryBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        metaBinaryBoxActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(metaBinaryBox, gridBagConstraints);

    metaOnlyFirstBox.setText("Only for first image");
    metaOnlyFirstBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        metaOnlyFirstBoxActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    add(metaOnlyFirstBox, gridBagConstraints);

    imageShowBox.setText("Show image");
    imageShowBox.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    imageShowBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        imageShowBoxActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
    add(imageShowBox, gridBagConstraints);

  }//GEN-END:initComponents

  private void imageShowBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageShowBoxActionPerformed
    // Add your handling code here:
        if (dcmieParam != null) {
      dcmieParam.isImageShow = imageShowBox.isSelected();
    }
  }//GEN-LAST:event_imageShowBoxActionPerformed

  private void metaOnlyFirstBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaOnlyFirstBoxActionPerformed
    // Add your handling code here:
        if (dcmieParam != null) {
      dcmieParam.isMetadataOnlyFirst = metaOnlyFirstBox.isSelected();
    }
  }//GEN-LAST:event_metaOnlyFirstBoxActionPerformed

  private void metaBinaryBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaBinaryBoxActionPerformed
    // Add your handling code here:
        if (dcmieParam != null) {
      dcmieParam.isMetadataBinary = metaBinaryBox.isSelected();
    }
  }//GEN-LAST:event_metaBinaryBoxActionPerformed

  private void metaStringBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metaStringBoxActionPerformed
    // Add your handling code here:
    if (dcmieParam != null) {
      dcmieParam.isMetadataString = metaStringBox.isSelected();
    }
  }//GEN-LAST:event_metaStringBoxActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox metaStringBox;
  private javax.swing.JCheckBox imageShowBox;
  private javax.swing.JLabel metaLabel;
  private javax.swing.JCheckBox metaOnlyFirstBox;
  private javax.swing.JCheckBox metaBinaryBox;
  // End of variables declaration//GEN-END:variables
  
}
